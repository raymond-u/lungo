serve:
  api:
    port: 80

  proxy:
    port: 8080
    trust_forwarded_headers: true

  prometheus:
    port: 8081
    collapse_request_paths: false
    hide_request_paths: false
    metric_name_prefix: 'ory_oathkeeper_'
    metrics_path: '/'

log:
  redaction_text: '*redacted*'
  {% if dev %}
  leak_sensitive_values: true
  level: debug
  {% endif %}

access_rules:
  matching_strategy: regexp
  repositories:
    - 'file:///etc/oathkeeper/access_rules.yaml'

authenticators:
  anonymous:
    enabled: true
    config:
      subject: anonymous

  cookie_session:
    enabled: true
    config:
      check_session_url: 'http://{{ ip_addresses.kratos }}:80/sessions/whoami'
      preserve_path: true
      extra_from: '@this'
      subject_from: 'identity.id'
      only:
        - 'lungo_session'

  noop:
    enabled: true

authorizers:
  allow:
    enabled: true
  remote_json:
    enabled: true
    config:
      remote: 'http://{{ ip_addresses.keto }}:80/relation-tuples/check'
      payload: >-
        {% raw %}
        {
          "namespace": "app",
          "object": "{{ printIndex .MatchContext.RegexpCaptureGroups 0 }}",
          "relation": "access",
          "subject_id": "{{ if .Extra.identity }}{{ .Extra.identity.traits.username }}{{ else }}{{ .Subject }}{{ end }}"
        }
        {% endraw %}

mutators:
  noop:
    enabled: true
  header:
    enabled: true
    config:
      headers:
        X-Remote-User: {% raw %}"{{ if .Extra.identity }}{{ .Extra.identity.traits.username }}{{ else }}{{ .Subject }}{{ end }}"{% endraw %}

errors:
  handlers:
    json:
      enabled: true
      config:
        verbose: true
