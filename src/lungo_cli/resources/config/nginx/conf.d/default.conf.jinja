{% set security = config.security %}

# See Move default writable paths to a dedicated directory (#119)
# https://github.com/openresty/docker-openresty/issues/119
client_body_temp_path /var/run/openresty/nginx-client-body;
proxy_temp_path       /var/run/openresty/nginx-proxy;
fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
scgi_temp_path        /var/run/openresty/nginx-scgi;

# Support uploading large files
client_max_body_size 128m;

# Support forwarding websocket connections
map $http_upgrade $connection_upgrade {
    default Upgrade;
    ""      "";
}

# Remove unwanted query parameters
map $args $filtered_args {
    default                $args;
    ~*^(.*)iframe=1&?(.*)$ $1$2;
}

# Escape the URL path
map $request_uri $escaped_uri {
    default       $request_uri;
    ~*^([^?]*).*$ $1;
}

# Workaround for a bug in Oathkeeper
map $request_method $auth_request_method {
    default $request_method;
    HEAD    GET;
}

{% if security.rate_limiting.enabled %}
limit_conn_zone $binary_remote_addr zone=global:10m;
limit_req_zone $binary_remote_addr zone=account:10m rate=1r/s;

limit_conn global {{ security.rate_limiting.max_connections }};
{% endif %}

include snippets/upstreams.conf;

server {
    listen [::]:80 default_server deferred;
    listen 80 default_server deferred;

    if ($http_upgrade = websocket) {
        return 301 wss://$host$request_uri;
    }

    return 301 https://$host$request_uri;
}

server {
    listen [::]:443 ssl http2 default_server;
    listen 443 ssl http2 default_server;

    include h5bp/tls/ssl_engine.conf;
    include h5bp/tls/ocsp_stapling.conf;
    include h5bp/tls/policy_balanced.conf;

    include snippets/certificate.conf;

    {% if dev %}
    error_log /var/log/nginx/error.log debug;
    rewrite_log on;
    {% endif %}

    location / {
        include snippets/proxy.conf;
        include snippets/auth.conf;

        proxy_pass http://node;
    }

    {% if security.rate_limiting.enabled %}
    # Rate limit login and password recovery requests
    location ~* /(?:login|recover) {
        include snippets/proxy.conf;
        include snippets/auth.conf;

        limit_req zone=account burst=1;
        proxy_pass http://node;
    }
    {% endif %}

    # Files in this directory can only be accessed internally
    location /internal {
        deny all;
    }

    add_header Cross-Origin-Opener-Policy same-origin always;
    add_header Cross-Origin-Resource-Policy same-origin always;
    add_header X-Frame-Options SAMEORIGIN always;

    include h5bp/security/referrer-policy.conf;
    include h5bp/security/strict-transport-security.conf;
    include h5bp/security/x-content-type-options.conf;
    include h5bp/web_performance/cache-control.conf;

    include sites/*.conf;
}
