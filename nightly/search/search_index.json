{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Lungo","text":"<p>Lungo is a user-friendly home lab setup designed for small-to-mid-scale on-premises hosting.</p> <p></p>"},{"location":"#features","title":"Features","text":"<ul> <li>Complete configurability - manage everything declaratively through YAML files</li> <li>Seamless interoperability - access all applications via a single sign-on portal</li> <li>Batteries included - benefit from a diverse range of applications</li> <li>Containerized solution - designed to operate in a rootless Docker environment</li> <li>Security by default - use HTTPS and secure server settings across the system</li> </ul>"},{"location":"#why-lungo","title":"Why Lungo?","text":"<p>We believe that self-hosting should be accessible and straightforward for everyone, especially for small-to-mid-scale home lab setups where scalability and high availability may not be the primary concerns. Our focus is on prioritizing easy setup and low maintenance.</p> <p>Lungo is specifically designed to meet these needs. It uses a YAML-based configuration system to simplify the customization of users, applications, and more. This eliminates the complexities associated with database maintenance and accelerates backup and restoration processes.</p> <p>Lungo comes with a single sign-on portal and a diverse range of applications that can be individually enabled or disabled. You have the flexibility to grant application access on a per-role or per-user basis. Anonymous access is also supported when enabled.</p> <p>Lungo not only works, but it also looks and feels great. It utilizes a modern UI framework and is designed to be responsive, ensuring a visually appealing and smooth user experience.</p> <p>Lastly, Lungo prioritizes security by default. It comes with HTTPS and secure server settings out of the box, ensuring a secure environment, and can be configured to rate limit sensitive API endpoints.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#nightly","title":"Nightly","text":""},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Update JupyterLab to 4.1.2</li> </ul>"},{"location":"changelog/#023-2024-2-16","title":"0.2.3 - 2024-2-16","text":""},{"location":"changelog/#changed_1","title":"Changed","text":"<ul> <li>Allow containers to restart automatically after a crash</li> <li>Update File Browser to 2.27.0</li> <li>Update JupyterLab to 4.1.1</li> <li>Update PrivateBin to 1.7.1</li> <li>Update Xray to 1.8.7</li> </ul>"},{"location":"changelog/#022-2023-11-27","title":"0.2.2 - 2023-11-27","text":""},{"location":"changelog/#changed_2","title":"Changed","text":"<ul> <li>Remove the user's last name from the greeting in the web UI</li> <li>Redirect stderr to stdout to avoid formatting issues in the CLI</li> </ul>"},{"location":"changelog/#021-2023-11-26","title":"0.2.1 - 2023-11-26","text":""},{"location":"changelog/#fixed","title":"Fixed","text":"<ul> <li>Fix the permission issue during data migration</li> <li>Update bundled resources when version changes</li> </ul>"},{"location":"changelog/#020-2023-11-26","title":"0.2.0 - 2023-11-26","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Add the Xray module</li> <li>Add fullscreen mode for the web UI</li> <li>Add theme selector for the web UI</li> </ul>"},{"location":"changelog/#changed_3","title":"Changed","text":"<ul> <li>Update JupyterLab to 4.0.9</li> </ul>"},{"location":"changelog/#fixed_1","title":"Fixed","text":"<ul> <li>Show error messages correctly in the web UI</li> <li>Correct handling of redirects when using non-standard ports</li> <li>Include the port number in the forwarded <code>Host</code> header</li> </ul>"},{"location":"changelog/#0112-2023-11-22","title":"0.1.12 - 2023-11-22","text":""},{"location":"changelog/#added_1","title":"Added","text":"<ul> <li>Add description for <code>Too Many Requests</code> errors in the web UI</li> </ul>"},{"location":"changelog/#fixed_2","title":"Fixed","text":"<ul> <li>Perform case-insensitive matching for the <code>Upgrade</code> header</li> <li>Handle websocket connections correctly</li> <li>Fix the resend button in the web UI</li> <li>Remove border color of the <code>input</code> element in the web UI</li> <li>Fix a bug that causes email delivery failures</li> </ul>"},{"location":"changelog/#security","title":"Security","text":"<ul> <li>Use custom Lua code for authentication to prevent endpoint probing</li> </ul>"},{"location":"changelog/#0111-2023-11-19","title":"0.1.11 - 2023-11-19","text":""},{"location":"changelog/#added_2","title":"Added","text":"<ul> <li>Support user-defined trusted proxies</li> </ul>"},{"location":"changelog/#changed_4","title":"Changed","text":"<ul> <li>Optimize the web UI layout for narrow screen widths</li> </ul>"},{"location":"changelog/#fixed_3","title":"Fixed","text":"<ul> <li>Check if the port is available before starting the container</li> <li>Fix a bug where URL search parameters are not passed to the backend</li> </ul>"},{"location":"changelog/#0110-2023-11-14","title":"0.1.10 - 2023-11-14","text":""},{"location":"changelog/#added_3","title":"Added","text":"<ul> <li>Add a new option to protect sensitive API endpoints from brute force attacks</li> <li>Support Docker Compose with Podman backend</li> </ul>"},{"location":"changelog/#changed_5","title":"Changed","text":"<ul> <li>Migrate to pnpm</li> </ul>"},{"location":"changelog/#fixed_4","title":"Fixed","text":"<ul> <li>Fix the outdated warning in the documentation</li> <li>Fix a bug where the lock file may persist if the container tool binary cannot be found</li> <li>Hide the navigation rail when there is no app to display</li> </ul>"},{"location":"changelog/#019-2023-11-7","title":"0.1.9 - 2023-11-7","text":""},{"location":"changelog/#changed_6","title":"Changed","text":"<ul> <li>Update File Browser to 2.26.0</li> <li>Update JupyterLab to 4.0.8</li> <li>Update RStudio to 4.3.2</li> </ul>"},{"location":"changelog/#fixed_5","title":"Fixed","text":"<ul> <li>Do not print local variables in panic messages</li> </ul>"},{"location":"changelog/#018-2023-11-5","title":"0.1.8 - 2023-11-5","text":""},{"location":"changelog/#fixed_6","title":"Fixed","text":"<ul> <li>Fix the GitHub Actions workflow</li> </ul>"},{"location":"changelog/#017-2023-11-4","title":"0.1.7 - 2023-11-4","text":""},{"location":"changelog/#added_4","title":"Added","text":"<ul> <li>Add logging to Keto, Kratos, and Oathkeeper</li> <li>Documentation</li> </ul>"},{"location":"changelog/#fixed_7","title":"Fixed","text":"<ul> <li>Do not pass anonymous account to Kratos</li> </ul>"},{"location":"changelog/#016-2023-10-25","title":"0.1.6 - 2023-10-25","text":""},{"location":"changelog/#fixed_8","title":"Fixed","text":"<ul> <li>Correct the use of padding in email template styles</li> </ul>"},{"location":"changelog/#015-2023-10-25","title":"0.1.5 - 2023-10-25","text":""},{"location":"changelog/#fixed_9","title":"Fixed","text":"<ul> <li>Make Nginx handle encoded URL paths correctly</li> </ul>"},{"location":"changelog/#014-2023-10-25","title":"0.1.4 - 2023-10-25","text":""},{"location":"changelog/#fixed_10","title":"Fixed","text":"<ul> <li>Set Bash as the default shell in the container</li> <li>Make Nginx handle encoded URL paths correctly</li> </ul>"},{"location":"changelog/#013-2023-10-24","title":"0.1.3 - 2023-10-24","text":""},{"location":"changelog/#fixed_11","title":"Fixed","text":"<ul> <li>Make CI to check out submodules correctly when building the image</li> </ul>"},{"location":"changelog/#012-2023-10-24","title":"0.1.2 - 2023-10-24","text":""},{"location":"changelog/#fixed_12","title":"Fixed","text":"<ul> <li>Prevent the here-documents syntax that is not supported by Podman</li> <li>Use way less layers when building the image</li> </ul>"},{"location":"changelog/#011-2023-10-24","title":"0.1.1 - 2023-10-24","text":""},{"location":"changelog/#added_5","title":"Added","text":"<ul> <li>Use GitHub Actions for publishing to PyPI</li> </ul>"},{"location":"changelog/#010-2023-10-24","title":"0.1.0 - 2023-10-24","text":"<p>Initial release</p>"},{"location":"cli-reference/","title":"lungo","text":"<p>A CLI tool for Lungo: a user-friendly home lab setup designed for small-to-mid-scale on-premises hosting.</p> <p>Usage:</p> <pre><code>lungo [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  -v, --version         Show the version of the program and exit.\n  --install-completion  Install completion for the current shell.\n  --show-completion     Show completion for the current shell, to copy it or\n                        customize the installation.\n</code></pre>"},{"location":"cli-reference/#check","title":"check","text":"<p>Check if the configuration is valid.</p> <p>Usage:</p> <pre><code>lungo check [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -c, --config-dir PATH  Path to the configuration directory.\n  -q, --quiet            Suppress all output except for errors.\n  -v, --verbose          Increase verbosity.\n</code></pre>"},{"location":"cli-reference/#down","title":"down","text":"<p>Stop the service.</p> <p>Usage:</p> <pre><code>lungo down [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --container-tool [docker|docker-compose|podman-compose]\n                                  Container management tool to use.\n  -c, --config-dir PATH           Path to the configuration directory.\n  --dev                           Use the development configuration.\n  -q, --quiet                     Suppress all output except for errors.\n  -v, --verbose                   Increase verbosity.\n</code></pre>"},{"location":"cli-reference/#up","title":"up","text":"<p>Start the service.</p> <p>Usage:</p> <pre><code>lungo up [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --build-only                    Only build the container.\n  --container-tool [docker|docker-compose|podman-compose]\n                                  Container management tool to use.\n  -c, --config-dir PATH           Path to the configuration directory.\n  --dev                           Use the development configuration.\n  --force-init                    Do a fresh initialization.\n  --remove-lock                   Remove the lock file.\n  -q, --quiet                     Suppress all output except for errors.\n  -v, --verbose                   Increase verbosity.\n</code></pre>"},{"location":"installation/","title":"Installation","text":"<p>Lungo is built upon Docker Compose. Before proceeding, please ensure that Docker is installed on your machine.</p> <p>Alternatively, you can use Podman Compose with Podman. You can also use Docker Compose with Podman.</p> <p>For instructions on setting up these tools, please refer to their respective documentation.</p>"},{"location":"installation/#with-pipx","title":"With pipx","text":"<p>The recommended way to install Lungo is with pipx:</p> Terminal<pre><code>pipx install lungo-cli\n</code></pre>"},{"location":"installation/#with-pip","title":"With pip","text":"<p>To install Lungo with pip, run:</p> Terminal<pre><code>pip install lungo-cli\n</code></pre>"},{"location":"installation/#from-source","title":"From source","text":"<p>To install Lungo from source, run:</p> Terminal<pre><code>git clone --recurse-submodules https://github.com/raymond-u/lungo\ncd lungo\npip install .\n</code></pre>"},{"location":"configuration/reference-for-config-yaml/","title":"Reference for config.yaml","text":"OS Default location Linux <code>~/.config/lungo/config.yaml</code> macOS <code>~/Library/Application Support/lungo/config.yaml</code> Windows <code>%USERPROFILE%\\AppData\\Local\\lungo\\lungo\\config.yaml</code> config.yaml<pre><code>## Configuration file for general settings\n\n# =========\n# branding:\n# =========\n\n#   # Custom name for the Lungo instance\n#   # Type: string\n#   # Default: 'Lungo'\n#   # Required: no\n#   name: Lungo\n\n#   # Custom subtitle for the landing page\n#   # Type: array\n#   # Default: [ 'a hug in a mug', 'a poetry of aroma', 'a quiet solitude', 'a whisper of inspiration' ]\n#   # Required: no\n#   subtitle:\n#     - a hug in a mug\n\n#   # Custom cover image for the landing page\n#   # Type: path\n#   # Default: none\n#   # Required: no\n#   cover: /assets/cover.png\n\n#   # Custom logo for the website\n#   # Type: path\n#   # Default: none\n#   # Required: no\n#   logo: /assets/favicon.png\n\n# ============\n# directories:\n# ============\n\n#   # Cache directory\n#   # Type: path\n#   # Default: (platform specific)\n#   # Required: no\n#   cache_dir: ~/.cache/lungo\n\n#   # Data directory\n#   # Type: path\n#   # Default: (platform specific)\n#   # Required: no\n#   data_dir: ~/.local/share/lungo\n\n#   # Directory to store user data (e.g. user joe will have its data stored in joe/ inside this directory)\n#   # Type: path\n#   # Default: none\n#   # Required: yes\n#   users_dir: /home\n\n#   # Directories to mount that are shared between the container and the host\n#   shared_dirs:\n#     -\n\n#         # Name of the directory after mounted (must be unique)\n#         Type: string\n#         Default: none\n#         Required: yes\n#         name: shared_readonly\n\n#         # Path to the directory on the host\n#         # Type: path\n#         # Default: none\n#         # Required: yes\n#         source: /mnt/data/shared_readonly\n\n#         # Whether to mount the directory as read-only or not\n#         # Type: boolean\n#         # Default: false\n#         # Required: no\n#         read_only: true\n\n# ========\n# modules:\n# ========\n\n#   # Settings for the File Browser module\n#   filebrowser:\n\n#     # Enable or disable the module\n#     # Type: boolean\n#     # Default: true\n#     # Required: no\n#     enabled: true\n\n#   # Settings for the JupyterHub module\n#   jupyterhub:\n\n#     # Enable or disable the module\n#     # Type: boolean\n#     # Default: true\n#     # Required: no\n#     enabled: true\n\n#     # Password for users inside the container\n#     # Type: string\n#     # Default: (randomly generated)\n#     # Required: no\n#     password: passwd\n\n#   # Settings for the PrivateBin module\n#   privatebin:\n\n#     # Enable or disable the module\n#     # Type: boolean\n#     # Default: true\n#     # Required: no\n#     enabled: true\n\n#   # Settings for the RStudio module\n#   rstudio:\n\n#     # Enable or disable the module\n#     # Type: boolean\n#     # Default: true\n#     # Required: no\n#     enabled: true\n\n#     # Password for users inside the container\n#     # Type: string\n#     # Default: (randomly generated)\n#     # Required: no\n#     password: passwd\n\n#   # Settings for the Xray module\n#   xray:\n\n#     # Enable or disable the module\n#     # Type: boolean\n#     # Default: true\n#     # Required: no\n#     enabled: true\n\n#     # Domain whitelist (used only as a template for configuring the proxy client)\n#     # Type: array\n#     # Default: [ ]\n#     # Required: no\n#     domain_whitelist: [ ]\n\n#     # Domain keyword whitelist (used only as a template for configuring the proxy client)\n#     # Type: array\n#     # Default: [ ]\n#     # Required: no\n#     domain_keyword_whitelist: [ ]\n\n#     # Domain suffix whitelist (used only as a template for configuring the proxy client)\n#     # Type: array\n#     # Default: [ ]\n#     # Required: no\n#     domain_suffix_whitelist: [ ]\n\n#     # IP range whitelist (used only as a template for configuring the proxy client)\n#     # Type: array\n#     # Default: [ ]\n#     # Required: no\n#     ip_range_whitelist: [ ]\n\n# ========\n# network:\n# ========\n\n#   # Hostname of the website\n#   # Type: string\n#   # Default: none\n#   # Required: yes\n#   hostname: lungo.com\n\n#   # Subnet to use for the internal network, in CIDR notation (must have a minimum of 256 addresses)\n#   # Type: string\n#   # Default: 192.168.2.0/24\n#   # Required: no\n#   subnet: 192.168.2.0/24\n\n#   # Trusted proxies (external IP addresses that are trusted to set the client IP address)\n#   # Type: array\n#   # Default: [ ]\n#   # Required: no\n#   trusted_proxies: [ ]\n\n#   # HTTP settings\n#   http:\n\n#     # Enable or disable HTTP\n#     # Type: boolean\n#     # Default: true\n#     # Required: no\n#     enabled: true\n\n#     # Port to use for HTTP\n#     # Type: integer\n#     # Default: 80\n#     # Required: no\n#     port: 80\n\n#   # HTTPS settings\n#   https:\n\n#     # Port to use for HTTPS\n#     # Type: integer\n#     # Default: 443\n#     # Required: no\n#     port: 443\n\n#     # Set custom TLS certificate and key\n#     tls:\n\n#       # Path to the TLS certificate\n#       # Type: path\n#       # Default: none\n#       # Required: no\n#       cert: /etc/ssl/certs/self-signed.crt\n\n#       # Path to the TLS private key\n#       # Type: path\n#       # Default: none\n#       # Required: no\n#       key: /etc/ssl/private/self-signed.key\n\n# ======\n# rules:\n# ======\n\n#   # Privileges of each role (privileges are inherited from roles above)\n#   privileges:\n\n#     # For unregistered users\n#     unregistered:\n\n#       # Allowed apps, or 'all' to allow all apps (do not allow services that require authentication)\n#       # Type: 'all' | array\n#       # Default: [ ]\n#       # Required: no\n#       allowed_apps: [ ]\n\n#     # For guest users\n#     guest:\n\n#       # Allowed apps, or 'all' to allow all apps\n#       # Type: 'all' | array\n#       # Default: ['filebrowser', 'privatebin']\n#       # Required: no\n#       allowed_apps:\n#         - filebrowser\n\n#     # For regular users\n#     user:\n\n#       # Allowed apps, or 'all' to allow all apps\n#       # Type: 'all' | array\n#       # Default: ['jupyterhub', 'rstudio']\n#       # Required: no\n#       allowed_apps:\n#         - rstudio\n\n#     # For administrators\n#     admin:\n\n#       # Allowed apps, or 'all' to allow all apps\n#       # Type: 'all' | array\n#       # Default: 'all'\n#       # Required: no\n#       allowed_apps: all\n\n# =========\n# security:\n# =========\n\n#   # Rate limiting settings\n#   rate_limiting:\n\n#     # Enable or disable rate limiting\n#     # Type: boolean\n#     # Default: false\n#     # Required: no\n#     enabled: false\n\n#     # Maximum number of requests in the given time window\n#     # Type: int\n#     # Default: 5\n#     # Required: no\n#     max_requests: 5\n\n#     # Time window (in seconds, or a string describing a time span in ISO 8601 format)\n#     # Type: int | string\n#     # Default: 'PT1H'\n#     # Required: no\n#     time_window: 'PT1H'\n\n#   # Session settings\n#   session:\n\n#     # Session lifetime (in seconds, or a string describing a time span in ISO 8601 format)\n#     # Type: int | string\n#     # Default: 'P1DT'\n#     # Required: no\n#     lifetime: 'P1DT'\n\n# =====\n# smtp:\n# =====\n\n#   # SMTP server host\n#   # Type: string\n#   # Default: none\n#   # Required: yes\n#   host: smtp.gmail.com\n\n#   # SMTP server port\n#   # Type: integer\n#   # Default: none\n#   # Required: yes\n#   port: 587\n\n#   # SMTP server username\n#   # Type: string\n#   # Default: none\n#   # Required: yes\n#   username: joe\n\n#   # SMTP server password\n#   # Type: string\n#   # Default: none\n#   # Required: yes\n#   password: joe123\n\n#   # Sender name\n#   # Type: string\n#   # Default: 'Lungo'\n#   # Required: no\n#   name: Lungo\n\n#   # Sender email\n#   # Type: string\n#   # Default: none\n#   # Required: yes\n#   sender: joe@gmail.com\n</code></pre>"},{"location":"configuration/reference-for-users-yaml/","title":"Reference for users.yaml","text":"OS Default location Linux <code>~/.config/lungo/users.yaml</code> macOS <code>~/Library/Application Support/lungo/users.yaml</code> Windows <code>%USERPROFILE%\\AppData\\Local\\lungo\\lungo\\users.yaml</code> users.yaml<pre><code>## Configuration file for user management\n\n# =========\n# accounts:\n# =========\n\n#   # List of accounts\n#   -\n\n#       # Enable or disable the account\n#       # Type: boolean\n#       # Default: true\n#       # Required: no\n#       enabled: false\n\n#       # Username\n#       # Type: string\n#       # Default: none\n#       # Required: yes\n#       username: joe\n\n#       # Full name (first and last)\n#       name:\n\n#         # First name\n#         # Type: string\n#         # Default: none\n#         # Required: yes\n#         first: Joe\n\n#         # Last name\n#         # Type: string\n#         # Default: none\n#         # Required: yes\n#         last: Doe\n\n#       # Email address\n#       # Type: string\n#       # Default: none\n#       # Required: yes\n#       email: joe@gmail.com\n\n#       # User role\n#       # Type: 'guest' | 'user' | 'admin'\n#       # Default: none\n#       # Required: yes\n#       role: user\n\n#       # Extra configuration\n#       extra:\n\n#         # Allowed apps besides those defined in the role, or 'all' to allow all apps\n#         # Type: 'all' | array\n#         # Default: [ ]\n#         # Required: no\n#         allowed_apps:\n#           - rstudio\n\n#         # Override user directory\n#         # Type: path\n#         # Default: none\n#         # Required: no\n#         user_dir: /mnt/somewhere/someone\n\n#         # User-specific shared directories\n#         shared_dirs:\n#           -\n\n#               # Name of the directory after mounted (must be unique)\n#               Type: string\n#               Default: none\n#               Required: yes\n#               name: shared_readonly\n\n#               # Path to the directory on the host\n#               # Type: path\n#               # Default: none\n#               # Required: yes\n#               source: /mnt/data/shared_readonly\n\n#               # Whether to mount the directory as read-only or not\n#               # Type: boolean\n#               # Default: false\n#               # Required: no\n#               read_only: true\n</code></pre>"},{"location":"getting-started/configuring-settings/","title":"Configuring settings","text":""},{"location":"getting-started/configuring-settings/#location-of-configuration-files","title":"Location of configuration files","text":"<p>Lungo utilizes two configuration files: <code>config.yaml</code>, which contains general settings, and <code>users.yaml</code>, dedicated to user management. By default, these files are located in a platform-dependent directory, such as <code>~/.config/lungo/</code> on Linux. You can override this location by passing the <code>--config-dir</code> option to Lungo.</p>"},{"location":"getting-started/configuring-settings/#editing-settings","title":"Editing settings","text":"<p>A minimal <code>config.yaml</code> file looks like this:</p> config.yaml<pre><code>directories:\n    users_dir: /home/lungo/users\n\nnetwork:\n    hostname: lungo.com\n\nsmtp:\n    host: smtp.gmail.com\n    port: 587\n    username: joe\n    password: joe123\n    name: Lungo\n    sender: joe@gmail.com\n</code></pre> <p>For a comprehensive list of available settings, please refer to the reference for config.yaml and reference for users.yaml.</p>"},{"location":"getting-started/configuring-settings/#verifying-settings","title":"Verifying settings","text":"<p>You can verify the correctness of your configuration files by running:</p> Terminal<pre><code>lungo check\n</code></pre>"},{"location":"getting-started/configuring-settings/#applying-changes","title":"Applying changes","text":"<p>After making any changes to the <code>config.yaml</code> file, you need to restart the Lungo service for the changes to take effect.</p>"},{"location":"getting-started/launching-the-service/","title":"Launching the service","text":"<p>To launch Lungo, simply run the following command:</p> Terminal<pre><code>lungo up\n</code></pre> <p>This will start the Lungo service as a daemon.</p>"},{"location":"getting-started/managing-users/","title":"Managing users","text":""},{"location":"getting-started/managing-users/#adding-a-user","title":"Adding a user","text":"<p>To add a new user, add an entry to the <code>users.yaml</code> file. Here is an example of a minimal entry:</p> users.yaml<pre><code>accounts:\n    -   username: joe\n        name:\n            first: Joe\n            last: Doe\n        email: joe@gmail.com\n        role: user\n</code></pre> <p>The username and email must be unique across all users. Note that you don't need to specify a password for the user. Instead, the user will use the password reset feature to set their own password.</p> <p>A user can be assigned one of the following roles:</p> <ul> <li><code>guest</code></li> <li><code>user</code></li> <li><code>admin</code></li> </ul> <p>Each role inherits the permissions of the previous one. For example, a user with the <code>admin</code> role can perform all actions that a <code>guest</code> or <code>user</code> can.</p>"},{"location":"getting-started/managing-users/#about-the-extrauser_dir-field","title":"About the <code>extra.user_dir</code> field","text":"<p>Every user has a dedicated directory for storing their files. By default, this directory is located within <code>users_dir</code>. However, you can set the <code>extra.user_dir</code> field to specify a different location for a specific user. For instance:</p> users.yaml<pre><code>accounts:\n    -   username: joe\n    -   username: jane\n        extra:\n            user_dir: /mnt/data/jane\n</code></pre> <p>Suppose you have set <code>users_dir</code> to <code>/home/lungo/users</code> in your <code>config.yaml</code> file. In this case, the user <code>joe</code> will have <code>/home/lungo/users/joe</code> as their user directory, while the user <code>jane</code> will have <code>/mnt/data/jane</code> as their user directory.</p>"},{"location":"getting-started/managing-users/#removing-a-user","title":"Removing a user","text":"<p>To remove a user, simply remove the corresponding entry from the <code>users.yaml</code> file. Alternatively, you can set the <code>enabled</code> flag to <code>false</code> to disable the user without removing the entry.</p>"},{"location":"getting-started/managing-users/#applying-changes","title":"Applying changes","text":"<p>After making any changes to the <code>users.yaml</code> file, you need to restart the Lungo service for the changes to take effect.</p>"},{"location":"getting-started/prerequisites/","title":"Prerequisites","text":""},{"location":"getting-started/prerequisites/#running-rootless-containers","title":"Running rootless containers","text":"<p>To ensure enhanced security, it is recommended to run Lungo in a non-root user environment. To achieve this, the administrator needs to perform specific configurations as outlined in the Docker guide or the Podman guide.</p> <p>To allow non-root users to bind to ports below 1024, you can utilize the <code>setcap</code> command:</p> Terminal<pre><code>sudo setcap 'cap_net_bind_service=+ep' \"$(command -v lungo)\"\n</code></pre> <p>Alternatively, you can modify the value of <code>net.ipv4.ip_unprivileged_port_start</code> using the following command:</p> Terminal<pre><code># This will allow any user to bind to port 80\nsudo sysctl net.ipv4.ip_unprivileged_port_start=80\n</code></pre>"},{"location":"getting-started/prerequisites/#file-permissions","title":"File permissions","text":"<p>In a rootless environment, proper file permissions must be set to enable non-root users on the host machine to read and write files created from within the container, and vice versa. It is recommended to create a dedicated user for Lungo and a group for sharing files between the container and the host. The following commands demonstrate this process:</p> Terminal<pre><code># Create a group for sharing files\nsudo groupadd shared\n\n# Create a dedicated user for Lungo\nsudo useradd -m -g shared lungo\n\n# Add an existing user to the group\nsudo usermod -a -G shared &lt;username&gt;\n\n# Create a directory for shared files\nsudo mkdir /mnt/data/shared\nsudo chown lungo:shared /mnt/data/shared\nsudo chmod g+rws /mnt/data/shared\n</code></pre> <p>For more information on file permissions in a rootless environment, you can refer to the documentation.</p> <p>Avoid using <code>sudo su lungo</code> to switch to the <code>lungo</code> user when launching Lungo in a rootless environment, as it may lead to improper functioning. Instead, set a password for the <code>lungo</code> user and log in normally:</p> Terminal<pre><code>sudo chpasswd &lt;&lt;&lt;'lungo:&lt;password&gt;'\n</code></pre>"},{"location":"getting-started/prerequisites/#firewall-settings","title":"Firewall settings","text":"<p>Depending on your firewall configuration, you might need to allow access to ports 80 and 443, or any other ports that you intend to use for HTTP and HTTPS. If you are using UFW (Uncomplicated Firewall), you can use the following commands:</p> Terminal<pre><code>sudo ufw allow http\nsudo ufw allow https\n</code></pre> <p>Please make sure to adjust the firewall settings according to your specific needs and security requirements.</p>"},{"location":"guides/allowing-anonymous-access/","title":"Allowing anonymous access","text":"<p>In addition to the three roles (<code>guest</code>, <code>user</code>, and <code>admin</code>) that can be assigned to a user, Lungo also supports anonymous access, which is associated with the role <code>unregistered</code>. To enable anonymous access, you need to configure the <code>unregistered.allowed_apps</code> field in the <code>config.yaml</code> file:</p> config.yaml<pre><code>rules:\n    privileges:\n        unregistered:\n            allowed_apps:\n                - privatebin\n                - rstudio\n</code></pre> <p>To enable anonymous access for applications that typically require user accounts, such as RStudio, you must add a user with the username <code>anonymous</code> in the <code>users.yaml</code> file:</p> users.yaml<pre><code>accounts:\n    -   username: anonymous\n        name:\n            first: Anonymous\n            last: User\n        email: an@nymo.us\n        role: guest\n</code></pre> <p>The user with the username <code>anonymous</code> serves as a shared account for anonymous access. The <code>name</code> and <code>email</code> fields can be set to arbitrary values (although they must still be provided). The <code>role</code> field must be set to <code>guest</code> and cannot be changed.</p>"},{"location":"guides/configuring-rate-limiting/","title":"Configuring rate limiting","text":"<p>To limit the number of requests made by each IP address to sensitive API endpoints within a specified time window, you can enable <code>security.rate_limiting</code> in the configuration file. This feature is particularly useful in safeguarding against brute-force attacks targeting authentication API endpoints.</p> <p>For rootless containers, it is essential to configure both the network stack and the port forwarder to use <code>slirp4netns</code> in order to determine the actual client IP address. Before proceeding, ensure that <code>slirp4netns</code> is installed on your machine.</p> <p>By default, Docker and Podman employ <code>RootlessKit</code> as the port forwarder. For Docker, you can find instructions on changing the port forwarder here. For Podman, you don't need to do anything, as <code>slirp4netns</code> can be picked up automatically.</p> <p>Please note that it is crucial to correctly configure the container to use <code>slirp4netns</code> as mentioned above before enabling <code>security.rate_limiting</code>. Failure to do so will result in rate limiting being applied to all requests, irrespective of the IP address, as the container won't be able to determine the actual client IP address.</p> <p>Moreover, when external proxies or load balancers are present in front of the container, it is necessary to specify their IP addresses in <code>network.trusted_proxies</code> in order to obtain the actual client IP address.</p>"},{"location":"guides/using-local-home-directories/","title":"Using local home directories","text":"<p>In the <code>config.yaml</code> file, you can find the <code>users_dir</code> field, which determines the storage location for user files. By configuring this setting, you can map the home directories of local users to the corresponding location inside the container.</p> config.yaml<pre><code>directories:\n    users_dir: /home\n</code></pre> <p>To enable write access to directories owned by a local user from within the container, you must ensure that the UID or GID of those directories matches the user running Lungo, and that appropriate write permissions have been granted.</p> <p>For instance, consider a scenario where a directory is owned by the user <code>joe</code>, and Lungo is running with the user <code>lungo</code>. In this case, the directory should be assigned to the same group as the primary group of <code>lungo</code>, and group write permission should be granted. For more information, please refer to the file permissions section.</p>"},{"location":"overview/architecture/","title":"Architecture","text":"<pre><code>graph LR\n    Host(Host) --&gt; Portal(Portal&lt;br /&gt;&lt;br /&gt;Openresty)\n    Portal --&gt;|Perform real IP forwarding&lt;br /&gt;and rate limiting| Proxy(Reverse Proxy&lt;br /&gt;&lt;br /&gt;Openresty)\n    Proxy &lt;---&gt;|Authorize requests| Auth(Access Control&lt;br /&gt;&lt;br /&gt;Oathkeeper) ---&gt; Control\n    Proxy ---&gt; UI(Web UI&lt;br /&gt;&lt;br /&gt;Node.js)\n    UI ---&gt;|Find accessible apps| Control\n    UI ---&gt; Backends\n\n    subgraph Control [&amp;nbsp]\n        subgraph P1 [Access Control Backends]\n            subgraph P2 [&amp;nbsp]\n                direction TB\n                Authenticator(Authenticator&lt;br /&gt;&lt;br /&gt;Kratos) ~~~ Authorizer(Authorizer&lt;br /&gt;&lt;br /&gt;Keto)\n            end\n        end\n    end\n\n    subgraph Backends [&amp;nbsp]\n        subgraph P3 [App Backends]\n            subgraph P4 [&amp;nbsp]\n                direction TB\n                App1(App 1) ~~~ App2(App 2) ~~~ App0(...)\n            end\n        end\n    end\n\n    classDef Dotted stroke-dasharray: 5 5\n    class Control,Backends Dotted\n    classDef Padding fill: none, stroke: none\n    class P1,P2,P3,P4 Padding</code></pre> <p>Lungo consists of three primary components:</p> <ul> <li>Reverse proxy - Openresty, responsible for authorizing incoming requests using Oathkeeper and forwarding them to   the relevant backend.</li> <li>Access control backends - Kratos and Keto, which manage user authentication and authorization, respectively.</li> <li>Application backends - a set of applications accessible through the proxy.</li> </ul>"},{"location":"overview/security/","title":"Security","text":"<p>Lungo prioritizes security and employs various measures to minimize the attack surface. The following outlines implemented security measures:</p> <ul> <li>HTTPS is enabled by default, and all HTTP requests are redirected to HTTPS.</li> <li>CSRF protection is enabled for identity-related endpoints.</li> <li>Rate limiting can be configured for identity-related endpoints.</li> <li>Cookies are configured to be secure and HTTP-only whenever possible, and the <code>SameSite</code> attribute is set to <code>Lax</code>.</li> <li>Cookies set by different application backend are isolated from each other by the <code>Path</code> attribute.</li> <li>Security-related headers are set to sensible values, including cross-origin resource policy, frame options, and more.</li> </ul>"},{"location":"overview/supported-applications/","title":"Supported applications","text":"Application Value Status FileBrowser <code>filebrowser</code> JupyterHub <code>jupyterhub</code> PrivateBin <code>privatebin</code> RStudio <code>rstudio</code> Xray <code>xray</code> <p>Legend:</p> Icon Meaning Fully supported Partially supported Planned"}]}